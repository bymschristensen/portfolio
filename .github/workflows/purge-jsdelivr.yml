name: Purge & warm jsDelivr (main + sha)
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  purge:
    runs-on: ubuntu-latest
    steps:
      - name: Compute refs
        id: ref
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "short_sha=${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "now=$(date +%s)"       >> "$GITHUB_OUTPUT"

      - name: Purge & warm jsDelivr cache
        env:
          REPO: bymschristensen/portfolio
          FILE: main.js
          SHORT_SHA: ${{ steps.ref.outputs.short_sha }}
          NOW: ${{ steps.ref.outputs.now }}
        run: |
          set -euo pipefail

          urls=(
            "gh/${REPO}@main/${FILE}"
            "gh/${REPO}@${SHORT_SHA}/${FILE}"
            # Optional: add CSS or other assets here
            # "gh/${REPO}@main/main.css"
            # "gh/${REPO}@${SHORT_SHA}/main.css"
          )

          for U in "${urls[@]}"; do
            echo "Purging  https://purge.jsdelivr.net/${U}"
            # retry purge up to 3x
            for i in 1 2 3; do
              curl -fsSL "https://purge.jsdelivr.net/${U}" && break || sleep 1
            done

            echo "Warming  https://cdn.jsdelivr.net/${U}?build=${NOW}"
            curl -fsI "https://cdn.jsdelivr.net/${U}?build=${NOW}" >/dev/null || true

            # Warm potential sourcemap too (ignore failures)
            if [[ "${U}" == *".js" ]]; then
              MAP="${U}.map"
              echo "Warming  https://cdn.jsdelivr.net/${MAP}?build=${NOW}"
              curl -fsI "https://cdn.jsdelivr.net/${MAP}?build=${NOW}" >/dev/null || true
            fi
          done

          echo "Done."
